
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$client-primary: mat-palette($mat-indigo);
$client-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$client-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$client-theme: mat-light-theme($client-primary, $client-accent, $client-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($client-theme);

@import '~@angular/material/theming';

@include mat-core();


// Background palette for light themes.
$custom-light-theme-background: (
  status-bar: map_get($mat-grey, 300),
  app-bar:    map_get($mat-grey, 100),
  background: map_get($mat-grey, 300),
  hover:      rgba(black, 0.04),
  card:       white,
  dialog:     white,
  disabled-button: rgba(black, 0.12),
  raised-button: white,
  focused-button: $dark-focused,
  selected-button: map_get($mat-grey, 300),
  selected-disabled-button: map_get($mat-grey, 400),
  disabled-button-toggle: map_get($mat-grey, 200),
  unselected-chip: map_get($mat-grey, 300),
  disabled-list-option: map_get($mat-grey, 200),
);

// Foreground palette for light themes.
$custom-light-theme-foreground: (
  base:              black,
  divider:           $dark-dividers,
  dividers:          $dark-dividers,
  disabled:          $dark-disabled-text,
  disabled-button:   rgba(black, 0.26),
  disabled-text:     $dark-disabled-text,
  elevation:         black,
  hint-text:         $dark-disabled-text,
  secondary-text:    $dark-secondary-text,
  icon:              rgba(black, 0.54),
  icons:             rgba(black, 0.54),
  text:              rgba(black, 0.87),
  slider-min:        rgba(black, 0.87),
  slider-off:        rgba(black, 0.26),
  slider-off-active: rgba(black, 0.38),
);

@function custom-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {
    @return (
      primary: $primary,
      accent: $accent,
      warn: $warn,
      is-dark: false,
      foreground: $custom-light-theme-foreground,
      background: $custom-light-theme-background,
    );
}

$my-app-primary: mat-palette($mat-blue-grey, 900);
$my-app-accent:  mat-palette($mat-light-blue, 900);
$my-app-warn:    mat-palette($mat-red);
// $custom-background-color: map_get($mat-grey, 300);

// Create the theme object (a Sass map containing all of the palettes).
$my-app-theme: custom-light-theme(
    $my-app-primary,
    $my-app-accent,
    $my-app-warn  
); 

// Insert custom background color
// $background: map-get($my-app-theme, background);
// $background: map_merge($background, (background: $custom-background-color));
// $theme: map_merge($my-app-theme, (background: $background));


@include angular-material-theme($my-app-theme);
// @include my-app-theme($my-app-theme);

// include it into angular.json "src/my-theme.scss"
// old: "./node_modules/@angular/material/prebuilt-themes/deeppurple-amber.css"

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
